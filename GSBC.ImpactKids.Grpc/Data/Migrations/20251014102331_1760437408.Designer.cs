// <auto-generated />
using System;
using GSBC.ImpactKids.Grpc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GSBC.ImpactKids.Grpc.Data.Migrations
{
    [DbContext(typeof(GsbcDbContext))]
    [Migration("20251014102331_1760437408")]
    partial class _1760437408
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.DbBibleVerse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BookNumber")
                        .HasColumnType("integer");

                    b.Property<int>("ChapterNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Verse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VerseNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BibleVerses");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.DbSchoolTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.DbService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("SchoolTermId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SchoolTermId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MemoryVerseListId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReferenceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Verse")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MemoryVerseListId");

                    b.ToTable("MemoryVerses");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseBibleVerseRelationship", b =>
                {
                    b.Property<Guid>("MemoryVerseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BibleVerseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BibleVersesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DbMemoryVerseId")
                        .HasColumnType("uuid");

                    b.HasKey("MemoryVerseId", "BibleVerseId");

                    b.HasIndex("BibleVersesId");

                    b.HasIndex("DbMemoryVerseId");

                    b.ToTable("DbMemoryVerseBibleVerseRelationship");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SchoolTermId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SchoolTermId");

                    b.ToTable("MemoryVerseLists");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseServiceRelationship", b =>
                {
                    b.Property<Guid>("MemoryVerseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MemoryVersesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ServicesId")
                        .HasColumnType("uuid");

                    b.HasKey("MemoryVerseId", "ServiceId");

                    b.HasIndex("MemoryVersesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("DbMemoryVerseServiceRelationship");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.DbService", b =>
                {
                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.DbSchoolTerm", "SchoolTerm")
                        .WithMany("Services")
                        .HasForeignKey("SchoolTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolTerm");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerse", b =>
                {
                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseList", "MemoryVerseList")
                        .WithMany("MemoryVerses")
                        .HasForeignKey("MemoryVerseListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MemoryVerseList");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseBibleVerseRelationship", b =>
                {
                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.DbBibleVerse", null)
                        .WithMany()
                        .HasForeignKey("BibleVersesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerse", null)
                        .WithMany()
                        .HasForeignKey("DbMemoryVerseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseList", b =>
                {
                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.DbSchoolTerm", "SchoolTerm")
                        .WithMany()
                        .HasForeignKey("SchoolTermId");

                    b.Navigation("SchoolTerm");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseServiceRelationship", b =>
                {
                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerse", null)
                        .WithMany()
                        .HasForeignKey("MemoryVersesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GSBC.ImpactKids.Grpc.Data.Models.DbService", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.DbSchoolTerm", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("GSBC.ImpactKids.Grpc.Data.Models.MemoryVerses.DbMemoryVerseList", b =>
                {
                    b.Navigation("MemoryVerses");
                });
#pragma warning restore 612, 618
        }
    }
}
